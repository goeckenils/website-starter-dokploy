version: "3"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - 3000
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`app.needmore.online`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt
      - traefik.http.services.frontend.loadbalancer.server.port=3000

  strapi:
    build: ./strapi
    image: modern-strapi:latest
    restart: unless-stopped
    env_file:
      - ./strapi/.env
    volumes:
      - ./strapi:/app
      - strapi-uploads:/app/public/uploads
    depends_on:
      - postgres
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.strapi.rule=Host(`api.needmore.online`)
      - traefik.http.routers.strapi.entrypoints=websecure
      - traefik.http.routers.strapi.tls.certresolver=letsencrypt
      - traefik.http.services.strapi.loadbalancer.server.port=1337  # Default for Strapi

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dokploy-network

volumes:
  pgdata:
  strapi-uploads:

networks:
  dokploy-network:
    external: true